{"version":3,"sources":["jumbotron.js"],"names":["$slider","$","JumbComp","$comp","width","height","comp","windowWidth","document","body","offsetWidth","windowHeight","innerHeight","picHeight","header_height","css","setJumbotron","children","hide","show","put","window","resize","click","animate","scrollTop","offset","top"],"mappings":";;;;;;AACA,CAAC,YAAY;AACX,MAAMA,UAAUC,EAAE,SAAF,CAAhB;;AADW,MAGLC,QAHK;AAIT,sBAAYC,KAAZ,EAAmE;AAAA,UAAhDC,KAAgD,uEAAxCD,MAAMC,KAAN,EAAwC;AAAA,UAAzBC,MAAyB,uEAAhBF,MAAME,MAAN,EAAgB;;AAAA;;AACjE,WAAKC,IAAL,GAAYH,KAAZ;AACA,WAAKC,KAAL,GAAaA,KAAb;AACA,WAAKC,MAAL,GAAcA,MAAd;AACD;;AARQ;AAAA;AAAA,4BAUgE;AAAA,YAArEE,WAAqE,uEAAvDC,SAASC,IAAT,CAAcC,WAAyC;AAAA,YAA5BC,YAA4B,uEAAbC,WAAa;;;AAEvE,YAAIC,YAAYN,cAAc,EAAd,GAAmB,CAAnC;AACA,YAAMO,gBAAgBb,EAAE,KAAF,EAASI,MAAT,KAAoBQ,SAA1C;;AAEA,YAAIF,eAAeG,aAAnB,EAAkCH,eAAeG,aAAf;;AAElC,aAAKR,IAAL,CAAUS,GAAV,CAAc;AACZ,kBAAQR,cAAc,CAAd,GAAkB,KAAKH,KAAL,GAAa,CAA/B,GAAmC,IAD/B;AAEZ,iBAAOO,eAAe,KAAKN,MAApB,GAA6B,CAA7B,GAAiC;AAF5B,SAAd;AAID;AArBQ;;AAAA;AAAA;;AAwBX,WAASW,YAAT,GAAwB;AACtB;AACAhB,YAAQiB,QAAR,GAAmBF,GAAnB,CAAuB,OAAvB,EAAgCP,SAASC,IAAT,CAAcC,WAAd,GAA4B,IAA5D;AACAV,YAAQe,GAAR,CAAY,YAAZ,EAA0BH,cAAcX,EAAE,KAAF,EAASI,MAAT,EAAd,GAAkC,IAA5D;;AAEA,QAAIQ,YAAYL,SAASC,IAAT,CAAcC,WAAd,GAA4B,EAA5B,GAAiC,CAAjD;;AAEA,QAAIE,cAAcX,EAAE,KAAF,EAASI,MAAT,KAAoBQ,SAAtC,EAAiD;;AAE/CZ,QAAE,kBAAF,EAAsBiB,IAAtB;AACA;AACD,KAJD,MAKK;AACHjB,QAAE,kBAAF,EAAsBkB,IAAtB;AACD;;AAED,QAAIjB,QAAJ,CAAaD,EAAE,QAAF,CAAb,EAA0B,KAA1B,EAAiC,KAAjC,EAAwCmB,GAAxC;AACA,QAAIlB,QAAJ,CAAaD,EAAE,UAAF,CAAb,EAA4B,GAA5B,EAAiC,EAAjC,EAAqCmB,GAArC;AAED;;AAED;AACAnB,IAAE,YAAY;;AAEZe;AACA;AACAf,MAAEoB,MAAF,EAAUC,MAAV,CAAiB;AAAA,aAAMN,cAAN;AAAA,KAAjB;;AAEA;AACAf,MAAE,kBAAF,EAAsBsB,KAAtB,CAA4B;AAAA,aAC5BtB,EAAE,WAAF,EAAeuB,OAAf,CAAuB,EAAEC,WAAUxB,EAAE,YAAF,EAAgByB,MAAhB,GAAyBC,GAArC,EAAvB,EAAmE,GAAnE,CAD4B;AAAA,KAA5B;AAED,GATD;AAWD,CAzDD","file":"jumbotron.js","sourcesContent":["\n(function () {\n  const $slider = $('#slider');\n\n  class JumbComp {\n    constructor($comp, width = $comp.width(), height = $comp.height()) {\n      this.comp = $comp;\n      this.width = width;\n      this.height = height;\n    }\n\n    put(windowWidth = document.body.offsetWidth, windowHeight = innerHeight) {\n\n      let picHeight = windowWidth / 16 * 9;\n      const header_height = $('nav').height() + picHeight;\n\n      if (windowHeight > header_height) windowHeight = header_height;\n\n      this.comp.css({\n        'left': windowWidth / 2 - this.width / 2 + 'px',\n        'top': windowHeight - this.height + 1 + 'px'\n      });\n    }\n  }\n\n  function setJumbotron() {\n    // Jumbotron Styles\n    $slider.children().css('width', document.body.offsetWidth + 'px');\n    $slider.css('max-height', innerHeight - $('nav').height() + 'px');\n\n    let picHeight = document.body.offsetWidth / 16 * 9;\n\n    if (innerHeight > $('nav').height() + picHeight) {\n\n      $('#arrow, #arrowbg').hide();\n      return;\n    }\n    else {\n      $('#arrow, #arrowbg').show();\n    }\n\n    new JumbComp($('#arrow'), 18.52, 25.37).put();\n    new JumbComp($('#arrowbg'), 163, 48).put();\n\n  }\n\n  // Jquery Codes\n  $(function () {\n\n    setJumbotron();\n    // When window is resize\n    $(window).resize(() => setJumbotron());\n\n    /* scroll down to container*/\n    $('#arrow, #arrowbg').click(() =>\n    $('html,body').animate({ scrollTop:$('.container').offset().top }, 800));\n  });\n\n})();\n"]}